class Coppia
{
    private:
        int x,y;
        Coppia(){};
    public:
        Coppia(int x,  int y)
        {
            this->x=x;
            this->y=y;
        }
        void SetX(int x) { this->x=x;}
        void SetY(int y) {this->y=y;}
        int getX() const  {return x;}
        int getY() const {return y;}
};

ostream &operator<<(ostream& stream,  const Coppia& c)
{
    stream<<"("<<c.getX()<<" , "<<c.getY()<<")";
    return stream;
}

bool operator>(const Coppia& c, const Coppia& d)
{
    if(c.getX()>d.getX())
        return true;
    else if(c.getX()==d.getX() && c.getY()>d.getY())
        return true;
    return false;
}

bool operator==(const Coppia& c, const Coppia& d)
{
    if(c.getX()==d.getX() && c.getY()==d.getY())
        return true;
    return false;
}

bool operator<(const Coppia& c, const Coppia& d)
{
    if(c.getX()<d.getX())
        return true;
    else if(c.getX()==d.getX() && c.getY()<d.getY())
        return true;
    return false;
}